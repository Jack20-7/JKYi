不要在临界区调用系统调用，因为可能会阻塞而导致临界区被无限延长
没有使用一个全局哈希表+一个锁的方式，而是给哈希表的每一个分区都设置一个哈希表+锁，通过这种方式减少了锁争用
没有使用unordered_map<std::string,value>的方式，因为key的长度是定长的，不会发生改变，所以这里采用的是unordered_set,然后key和value都存储在同一块连续的内存中
如果我们不想在STL的哈希表的每一个节点中存储一个哈希值的话，我们需要在自定义的hash函数的operator() 后面加上 noexcept

